<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>texera</artifactId>
        <groupId>edu.uci.ics.texera</groupId>
        <version>0.1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>dataflow</artifactId>
    <name>dataflow</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>edu.uci.ics.texera</groupId>
            <artifactId>api</artifactId>
            <version>${texera.version}</version>
        </dependency>
        <dependency>
            <groupId>edu.uci.ics.texera</groupId>
            <artifactId>storage</artifactId>
            <version>${texera.version}</version>
        </dependency>
        <dependency>
            <groupId>info.debatty</groupId>
            <artifactId>java-string-similarity</artifactId>
            <version>RELEASE</version>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>3.6.0</version>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>3.6.0</version>
            <classifier>models</classifier>
        </dependency>
        <dependency>
            <groupId>com.google.re2j</groupId>
            <artifactId>re2j</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
    		      <groupId>org.apache.poi</groupId>
    		      <artifactId>poi-ooxml</artifactId>
    		      <version>3.16</version>
		</dependency>
		<dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>1.20</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <version>1.17</version>
            <optional>true</optional>
        </dependency>
		<dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
        </dependency>
		<dependency>
    		  <groupId>mysql</groupId>
    		  <artifactId>mysql-connector-java</artifactId>
    		  <version>5.1.42</version>
		</dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.12</version>
        </dependency>
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.11</version>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>2.3</version>
        </dependency>
        
        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>hbc-core</artifactId> <!-- or hbc-twitter4j -->
            <version>2.2.0</version> <!-- or whatever the latest version is -->
        </dependency>
        <!-- used by twitter connector -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jsonSchema</artifactId>
            <version>2.9.4</version>
        </dependency>
        <dependency>
            <groupId>com.github.java-json-tools</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>2.2.8</version>
        </dependency>
        
        <!-- dictionary -->
		<dependency>
		    <groupId>org.xerial</groupId>
		    <artifactId>sqlite-jdbc</artifactId>
		    <version>3.25.2</version>
		</dependency>
		
		<dependency>
		  <groupId>org.immutables</groupId>
		  <artifactId>value</artifactId>
		  <version>2.7.4</version>
		  <scope>provided</scope>
		</dependency>
        
	    <dependency>
		  <groupId>org.jooq</groupId>
		  <artifactId>jooq</artifactId>
		  <version>3.11.9</version>
		</dependency>
		<dependency>
		  <groupId>org.jooq</groupId>
		  <artifactId>jooq-meta</artifactId>
		  <version>3.11.9</version>
		</dependency>
		<dependency>
		  <groupId>org.jooq</groupId>
		  <artifactId>jooq-codegen</artifactId>
		  <version>3.11.9</version>
		</dependency>
        
        
    </dependencies>

    <build>
        <!-- dictionary immutables locations -->
    	<plugins>
		    <plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>build-helper-maven-plugin</artifactId>
			    <executions>
			        <execution>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>add-source</goal>
			            </goals>
			            <configuration>
			                <sources>
			                    <source>target/generated-sources</source>
			                </sources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
		    <plugin>  
		     <groupId>org.codehaus.mojo</groupId>  
		     <artifactId>exec-maven-plugin</artifactId>  
		     <version>1.1.1</version>  
		     <executions>  
		      <execution>  
		       <phase>compile</phase>  
		       <goals>  
		        <goal>java</goal>  
		       </goals>  
		       <configuration>  
		        <mainClass>edu.uci.ics.texera.dataflow.resource.dictionary.SQLiteDictionaryManager</mainClass>
		       </configuration>  
		      </execution>  
		     </executions>  
		    </plugin>  
			
			
			<plugin>
			  <!-- Specify the maven code generator plugin -->
			  <!-- Use org.jooq            for the Open Source Edition
			           org.jooq.pro        for commercial editions, 
			           org.jooq.pro-java-6 for commercial editions with Java 6 support,
			           org.jooq.trial      for the free trial edition 
			         
			       Note: Only the Open Source Edition is hosted on Maven Central. 
			             Import the others manually from your distribution -->
			  <groupId>org.jooq</groupId>
			  <artifactId>jooq-codegen-maven</artifactId>
			  <version>3.11.10</version>
			
			  <executions>
			    <execution>
			      <id>jooq-codegen</id>
			      <phase>compile</phase>
			      <goals>
			        <goal>generate</goal>
			      </goals>
			      <configuration>
					  <jdbc>
					    <driver>org.sqlite.JDBC</driver>
					    <url>jdbc:sqlite:..\user-resources\dictionaries\TexeraDictionariesDB.db</url>
					    <user>root</user>
					    <password></password>
					  </jdbc>
					
					  <generator>
					    <!-- The default code generator. You can override this one, to generate your own code style.
					         Supported generators:
					         - org.jooq.codegen.JavaGenerator
					         - org.jooq.codegen.ScalaGenerator
					         Defaults to org.jooq.codegen.JavaGenerator -->
					    <name>org.jooq.codegen.JavaGenerator</name>
					
					    <database>
					      <!-- The database type. The format here is:
					           org.util.[database].[database]Database -->
					      <name>org.jooq.meta.sqlite.SQLiteDatabase</name>
					
					      <!-- The database schema (or in the absence of schema support, in your RDBMS this
					           can be the owner, user, database name) to be generated -->
					      <!-- All elements that are generated from your schema
					           (A Java regular expression. Use the pipe to separate several expressions)
					           Watch out for case-sensitivity. Depending on your database, this might be important! -->
					      <includes>.*</includes>
					
					      <!-- All elements that are excluded from your schema
					           (A Java regular expression. Use the pipe to separate several expressions).
					           Excludes match before includes, i.e. excludes have a higher priority -->
					      <excludes></excludes>
					    </database>
					
					    <target>
					      <!-- The destination package of your generated classes (within the destination directory) -->
					      <packageName>edu.uci.ics.texera.dataflow.resource.dictionaryJooq</packageName>
					
					      <!-- The destination directory of your generated classes. Using Maven directory layout here -->
					      <directory>src/main/java</directory>
					    </target>
					  </generator>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>

    	</plugins>
    </build>
</project>