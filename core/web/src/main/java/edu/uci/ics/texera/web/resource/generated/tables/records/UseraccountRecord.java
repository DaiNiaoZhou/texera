/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.resource.generated.tables.records;


import edu.uci.ics.texera.web.resource.generated.tables.Useraccount;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UseraccountRecord extends UpdatableRecordImpl<UseraccountRecord> implements Record2<String, Double> {

    private static final long serialVersionUID = -1609665447;

    /**
     * Setter for <code>texera.useraccount.userName</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera.useraccount.userName</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>texera.useraccount.userID</code>.
     */
    public void setUserid(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera.useraccount.userID</code>.
     */
    public Double getUserid() {
        return (Double) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Double> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Double> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Double> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Useraccount.USERACCOUNT.USERNAME;
    }

    @Override
    public Field<Double> field2() {
        return Useraccount.USERACCOUNT.USERID;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public Double component2() {
        return getUserid();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public Double value2() {
        return getUserid();
    }

    @Override
    public UseraccountRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UseraccountRecord value2(Double value) {
        setUserid(value);
        return this;
    }

    @Override
    public UseraccountRecord values(String value1, Double value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UseraccountRecord
     */
    public UseraccountRecord() {
        super(Useraccount.USERACCOUNT);
    }

    /**
     * Create a detached, initialised UseraccountRecord
     */
    public UseraccountRecord(String username, Double userid) {
        super(Useraccount.USERACCOUNT);

        set(0, username);
        set(1, userid);
    }
}
