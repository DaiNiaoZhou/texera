/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.resource.generated.tables;


import edu.uci.ics.texera.web.resource.generated.Indexes;
import edu.uci.ics.texera.web.resource.generated.Keys;
import edu.uci.ics.texera.web.resource.generated.Texera;
import edu.uci.ics.texera.web.resource.generated.tables.records.FileownshipRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Fileownship extends TableImpl<FileownshipRecord> {

    private static final long serialVersionUID = -239392542;

    /**
     * The reference instance of <code>texera.fileownship</code>
     */
    public static final Fileownship FILEOWNSHIP = new Fileownship();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FileownshipRecord> getRecordType() {
        return FileownshipRecord.class;
    }

    /**
     * The column <code>texera.fileownship.userID</code>.
     */
    public final TableField<FileownshipRecord, Integer> USERID = createField(DSL.name("userID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>texera.fileownship.fileID</code>.
     */
    public final TableField<FileownshipRecord, Integer> FILEID = createField(DSL.name("fileID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>texera.fileownship</code> table reference
     */
    public Fileownship() {
        this(DSL.name("fileownship"), null);
    }

    /**
     * Create an aliased <code>texera.fileownship</code> table reference
     */
    public Fileownship(String alias) {
        this(DSL.name(alias), FILEOWNSHIP);
    }

    /**
     * Create an aliased <code>texera.fileownship</code> table reference
     */
    public Fileownship(Name alias) {
        this(alias, FILEOWNSHIP);
    }

    private Fileownship(Name alias, Table<FileownshipRecord> aliased) {
        this(alias, aliased, null);
    }

    private Fileownship(Name alias, Table<FileownshipRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Fileownship(Table<O> child, ForeignKey<O, FileownshipRecord> key) {
        super(child, key, FILEOWNSHIP);
    }

    @Override
    public Schema getSchema() {
        return Texera.TEXERA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FILEOWNSHIP_FILEID, Indexes.FILEOWNSHIP_PRIMARY, Indexes.FILEOWNSHIP_USERID);
    }

    @Override
    public UniqueKey<FileownshipRecord> getPrimaryKey() {
        return Keys.KEY_FILEOWNSHIP_PRIMARY;
    }

    @Override
    public List<UniqueKey<FileownshipRecord>> getKeys() {
        return Arrays.<UniqueKey<FileownshipRecord>>asList(Keys.KEY_FILEOWNSHIP_PRIMARY);
    }

    @Override
    public List<ForeignKey<FileownshipRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FileownshipRecord, ?>>asList(Keys.FILEOWNSHIP_IBFK_1, Keys.FILEOWNSHIP_IBFK_2);
    }

    public Useraccount useraccount() {
        return new Useraccount(this, Keys.FILEOWNSHIP_IBFK_1);
    }

    public Userfile userfile() {
        return new Userfile(this, Keys.FILEOWNSHIP_IBFK_2);
    }

    @Override
    public Fileownship as(String alias) {
        return new Fileownship(DSL.name(alias), this);
    }

    @Override
    public Fileownship as(Name alias) {
        return new Fileownship(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Fileownship rename(String name) {
        return new Fileownship(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Fileownship rename(Name name) {
        return new Fileownship(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
